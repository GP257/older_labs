\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Ping-Pong [10 points]}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Bandwidth as a function of message size for blocking (left) and non-blocking (right) communications.}}{2}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{2}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{2}}
\newlabel{fig:q1}{{1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Scalar Advection Equation [10 Points]}{2}}
\newlabel{eqn:discretization}{{3}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces One-dimensional advection equation for forward-time backward-space (FTBS) for $t = 0, \, 8$ with $\Delta x = 0.02$, where \texttt  {-} denotes the exact solution and \texttt  {o:} the numerical solution. Note that $\delimiter "026B30D u(x, t) - u^h(x, t)\delimiter "026B30D  = 0$.}}{4}}
\newlabel{fig:q2_solution}{{2}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Domain decomposition for the one-dimension advection equation using FTBS discretization which requires only one ghost cell within each subregion corresponding to the value $u_{j - 1}^n$, hence $m = N/p + 2$. At each time-step the $u_{m}^n$ buffer is sent from processor $i$ to the $u_{0}^n$ buffer on processor $i + 1$.}}{4}}
\newlabel{fig:q2_domaindecom}{{3}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Parallel performance of the one-dimensional scalar advection equation for (a) timing and (b) speedup.}}{5}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{5}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{5}}
\newlabel{fig:q2_performance}{{4}{5}}
